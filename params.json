{"name":"sandwich.limo","tagline":"My (delicious) PaaS playground","body":"# What is sandwich.limo\r\nsandwich.limo is [my](http://anand.io) (delicious) PaaS playground. I'm very fascinated with containerization, virtualization, twelve-factor, THE CLOUD, etc... and I experiment with various technologies here. You can see what I'm currently playing with below.\r\n![Picture of a sandwich on wheels](http://i.imgur.com/fYt6pIb.jpg)\r\n\r\n## Project Hoagie\r\n\r\n### Overview\r\nProject Hoagie is a PaaS experiment. It uses HPE Helion Stackato. The platform packages applications and executes them in docker containers.\r\n\r\n### Status\r\nIt works! I'm still playing around with the infrastructure though. I'm working on creating a CloudFormation template, so I can easily deploy a cluster of servers.\r\n\r\n### Scaling/Availability\r\nThe DEAs can easily be scaled up/down via auto-scaling. The Helion Stackato engine restarts the droplets on other DEAs if a failure occurs.\r\n\r\n### Architecture/Elements\r\nThe Helion Stackato platform is made up of a number of nodes which play various roles.\r\n\r\nName | Purpose\r\n---- | ----\r\nprimary | Runs the cloud controller, health manager, and a router.\r\ncontroller | Manages most of the operations. Runs the management console, API, cloud controller, handles service provisioning, dispatches application staging/deployment, and tracks availability of DEA nodes (via health manager).\r\nrouter | Routes traffic to the appropriate destination (usually an application running on a DEA).\r\ndea | DEA stands for Droplet Execution Agent. It handles executing the various applications via docker containers.\r\nfilesystem | Provides a persistent filesystem service to the platform.\r\nmongodb | Self-explanatory\r\nmysql | Self-explanatory\r\npostgresql | Self-explanatory\r\nrabbit | Runs a RabbitMQ service\r\nredis | Self-explanatory\r\nmemcached | Self-explanatory\r\nharbor | Provides routing for ports (other than HTTP/HTTPS via 80/443 - that is handled by the router)\r\n\r\n### Infrastructure - VPC (10.0.0.0/16)\r\nI'm hosting the platform on AWS in a VPC. Total cost is ~$550/mo.\r\n\r\n#### Subnets\r\nName | Range | Availability Zone\r\n---- | ---- | ----\r\nMayonnaise | 10.0.1.0/24 | us-east-1b\r\nMustard | 10.0.2.0/24 | us-east-1c\r\n\r\n#### Instances\r\nInstance | Roles | Type | Subnet\r\n------------ | ------------- | ------------- | -------------\r\nsourdough | load balancer | elb | n/a\r\nbacon | primary, controller, router, filesystem | t2.medium | mayonnaise\r\nsalami | mysql, postgresql, mongodb | m3.medium | mayonnaise\r\nturkey | dea | m4.large | mayonnaise\r\nchicken | dea | m4.large | mayonnaise\r\nlettuce | controller, router, harbor | t2.medium | mustard\r\ntomato | rabbit, redis, memcached | m3.medium | mustard\r\nolive | dea | m4.large | mustard\r\nanchovy | dea | m4.large | mustard","google":"UA-62883537-2","note":"Don't delete this file! It's used internally to help with page regeneration."}